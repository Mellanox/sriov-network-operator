# Copyright 2025 sriov-network-device-plugin authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: network-resources-injector
  name: network-resources-injector
  namespace: {{.Namespace}}
  annotations:
    kubernetes.io/description: |
      This daemon set launches the network resource injector component on master or worker nodes.
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  selector:
    matchLabels:
      app: network-resources-injector
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 33%
  template:
    metadata:
      labels:
        app: network-resources-injector
        component: network
        type: infra
        openshift.io/component: network
      annotations:
        openshift.io/required-scc: restricted-v2
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: network-resources-injector-sa
      priorityClassName: "system-cluster-critical"
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        {{ if not .ExternalControlPlane }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
        {{ end }}
      tolerations:
      {{ if not .ExternalControlPlane }}
      - key: "node-role.kubernetes.io/master"
        operator: Exists
        effect: NoSchedule
      - key: "node-role.kubernetes.io/control-plane"
        operator: Exists
        effect: NoSchedule
      - key: "node.kubernetes.io/not-ready"
        operator: Exists
        effect: NoSchedule
      {{ end }}
      {{- if .ImagePullSecrets }}
      imagePullSecrets:
      {{- range .ImagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - name: webhook-server
        image: {{.NetworkResourcesInjectorImage}}
        command:
        - webhook
        args:
        - -bind-address=0.0.0.0
        - -port=6443
        - -tls-private-key-file=/etc/tls/tls.key
        - -tls-cert-file=/etc/tls/tls.crt
        - -insecure=true
        - -logtostderr=true
        - -alsologtostderr=true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/tls
          name: tls
      volumes:
      - name: tls
        secret:
          secretName: {{.InjectorWebhookSecretName}}
